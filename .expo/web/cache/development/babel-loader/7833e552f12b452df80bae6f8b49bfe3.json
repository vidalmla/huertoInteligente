{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\noe03\\\\Documents\\\\ReactNative\\\\huertoInteligente\\\\src\\\\screens\\\\Private\\\\Notificaciones.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./../../Styles/styles\";\nimport HeaderAcount from \"../../componet/HeaderAcount\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nvar image = {\n  uri: 'http://dtai.uteq.edu.mx/~luivid195/AWI4.0/HuertoInteligente/image/monta%c3%b1a.jpg'\n};\nimport firebase from \"../../backend/firebase\";\nimport { Entypo } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nvar Notificaciones = function Notificaciones() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      agua = _useState2[0],\n      setagua = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      suelo = _useState4[0],\n      setsuelo = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      luz = _useState6[0],\n      setluz = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      humedad = _useState8[0],\n      sethumedad = _useState8[1];\n\n  var getagua = function getagua() {\n    return _regeneratorRuntime.async(function getagua$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database.collection('cultivos').where(firebase.auth.currentUser.uid + \".user\", '==', \"\" + firebase.auth.currentUser.uid).get().then(function (snap) {\n              if (snap.size > 0) {\n                snap.forEach(function (doc) {\n                  var datacultivo = doc.data();\n                  firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/agua').on('value', function (snapShot) {\n                    var valorealtimeagua = snapShot.val();\n                    var maxagua = datacultivo[firebase.auth.currentUser.uid]['agua']['maximo'];\n                    var minagua = datacultivo[firebase.auth.currentUser.uid]['agua']['minimo'];\n\n                    if (valorealtimeagua >= maxagua) {\n                      setagua('Exceso de agua, tomar precacione.');\n                    } else if (valorealtimeagua <= minagua) {\n                      setagua('Cantidad de agua menor al minimo.');\n                    } else {\n                      setagua('Conciones de agua ideales.');\n                    }\n                  });\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getaluz = function getaluz() {\n    return _regeneratorRuntime.async(function getaluz$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database.collection('cultivos').where(firebase.auth.currentUser.uid + \".user\", '==', \"\" + firebase.auth.currentUser.uid).get().then(function (snap) {\n              if (snap.size > 0) {\n                snap.forEach(function (doc) {\n                  var datacultivo = doc.data();\n                  firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/luz').on('value', function (snapShot) {\n                    var valorealtimeluz = snapShot.val();\n                    var maxluz = datacultivo[firebase.auth.currentUser.uid]['luz']['maximo'];\n                    var minluz = datacultivo[firebase.auth.currentUser.uid]['luz']['minimo'];\n\n                    if (valorealtimeluz > maxluz) {\n                      setluz('Exceso de luz, precaci√≥n.');\n                    } else if (valorealtimeluz <= minluz) {\n                      setluz('Cantidad de luz debajo de minimo.');\n                    } else {\n                      setluz('Condiciones de luz ideales.');\n                    }\n                  });\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getsuelo = function getsuelo() {\n    return _regeneratorRuntime.async(function getsuelo$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database.collection('cultivos').where(firebase.auth.currentUser.uid + \".user\", '==', \"\" + firebase.auth.currentUser.uid).get().then(function (snap) {\n              if (snap.size > 0) {\n                snap.forEach(function (doc) {\n                  var datacultivo = doc.data();\n                  firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/suelo').on('value', function (snapShot) {\n                    var valorealtimeSU = snapShot.val();\n                    var maxsuelo = datacultivo[firebase.auth.currentUser.uid]['suelo']['maximo'];\n                    var minsuelo = datacultivo[firebase.auth.currentUser.uid]['suelo']['minimo'];\n\n                    if (valorealtimeSU >= maxsuelo) {\n                      setsuelo('Exceso de humedad en el suelo.');\n                    } else if (valorealtimeSU <= minsuelo) {\n                      setsuelo('Falta de humedad en el suelo.');\n                    } else {\n                      setsuelo('Condiciones de humedad del suelo ideales.');\n                    }\n                  });\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var gethumedad = function gethumedad() {\n    return _regeneratorRuntime.async(function gethumedad$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(firebase.database.collection('cultivos').where(firebase.auth.currentUser.uid + \".user\", '==', \"\" + firebase.auth.currentUser.uid).get().then(function (snap) {\n              if (snap.size > 0) {\n                snap.forEach(function (doc) {\n                  var datacultivo = doc.data();\n                  firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/humedad').on('value', function (snapShot) {\n                    var valorealtimeHu = snapShot.val();\n                    var maxhumedad = datacultivo[firebase.auth.currentUser.uid]['humedad']['maximo'];\n                    var minhumedad = datacultivo[firebase.auth.currentUser.uid]['humedad']['minimo'];\n\n                    if (valorealtimeHu > maxhumedad) {\n                      sethumedad('HUMEDAD EXCCEDIDA.');\n                    } else if (valorealtimeHu < minhumedad) {\n                      sethumedad('FALTA HUMEDAD.');\n                    } else {\n                      sethumedad('HUMEDAD IDEAL.');\n                    }\n                  });\n                });\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getagua();\n    getaluz();\n    getsuelo();\n    gethumedad();\n  }, []);\n  return React.createElement(ImageBackground, {\n    source: image,\n    style: styles.Dasboardimage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Dasboardcontainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, React.createElement(HeaderAcount, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.Dasboardfooter), {}, {\n      alignItems: 'center'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      top: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      marginVertical: 10,\n      backgroundColor: \"#564A4A\",\n      borderTopLeftRadius: 40,\n      borderTopRightRadius: 40,\n      borderBottomLeftRadius: 40,\n      borderBottomRightRadius: 40,\n      elevation: 5,\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#FFF\",\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, React.createElement(Entypo, {\n    name: \"water\",\n    size: 30,\n    color: \"#FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  }), \"   \", agua)), React.createElement(View, {\n    style: {\n      marginVertical: 10,\n      backgroundColor: \"#564A4A\",\n      borderTopLeftRadius: 40,\n      borderTopRightRadius: 40,\n      borderBottomLeftRadius: 40,\n      borderBottomRightRadius: 40,\n      elevation: 5,\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#FFF\",\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, React.createElement(Entypo, {\n    name: \"light-up\",\n    size: 30,\n    color: \"#FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }), \"   \", luz)), React.createElement(View, {\n    style: {\n      marginVertical: 10,\n      backgroundColor: \"#564A4A\",\n      borderTopLeftRadius: 40,\n      borderTopRightRadius: 40,\n      borderBottomLeftRadius: 40,\n      borderBottomRightRadius: 40,\n      elevation: 5,\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#FFF\",\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 29\n    }\n  }, React.createElement(Entypo, {\n    name: \"air\",\n    size: 30,\n    color: \"#FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }), \"   \", suelo)), React.createElement(View, {\n    style: {\n      marginVertical: 10,\n      backgroundColor: \"#564A4A\",\n      borderTopLeftRadius: 40,\n      borderTopRightRadius: 40,\n      borderBottomLeftRadius: 40,\n      borderBottomRightRadius: 40,\n      elevation: 5,\n      padding: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#FFF\",\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, React.createElement(FontAwesome5, {\n    name: \"water\",\n    size: 30,\n    color: \"#FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 32\n    }\n  }), \"   \", humedad))))));\n};\n\nexport default Notificaciones;","map":{"version":3,"sources":["C:/Users/noe03/Documents/ReactNative/huertoInteligente/src/screens/Private/Notificaciones.js"],"names":["React","useState","useEffect","styles","HeaderAcount","image","uri","firebase","Entypo","FontAwesome5","Notificaciones","agua","setagua","suelo","setsuelo","luz","setluz","humedad","sethumedad","getagua","database","collection","where","auth","currentUser","uid","get","then","snap","size","forEach","doc","datacultivo","data","realtime","ref","on","snapShot","valorealtimeagua","val","maxagua","minagua","getaluz","valorealtimeluz","maxluz","minluz","getsuelo","valorealtimeSU","maxsuelo","minsuelo","gethumedad","valorealtimeHu","maxhumedad","minhumedad","Dasboardimage","Dasboardcontainer","Dasboardfooter","alignItems","flex","top","marginVertical","backgroundColor","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","elevation","padding","color","fontWeight","fontSize"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport styles from \"./../../Styles/styles\";\r\nimport HeaderAcount from '../../componet/HeaderAcount';\r\nimport\r\n    {\r\n        View,\r\n        Text,\r\n        ImageBackground,\r\n    } from 'react-native';\r\n\r\nconst image = {uri: 'http://dtai.uteq.edu.mx/~luivid195/AWI4.0/HuertoInteligente/image/monta%c3%b1a.jpg'}\r\n//backend\r\nimport firebase from '../../backend/firebase';\r\n//iconos\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\n\r\n\r\nconst Notificaciones = () =>\r\n{\r\n    const [agua, setagua] = useState('');\r\n    const [suelo, setsuelo] = useState('');\r\n    const [luz, setluz] = useState('');\r\n    const [humedad, sethumedad] = useState('');\r\n\r\n    const getagua= async() =>\r\n    {\r\n        await firebase.database.collection('cultivos')\r\n            .where(`${firebase.auth.currentUser.uid}.user`, '==', `${firebase.auth.currentUser.uid}`)\r\n            .get()\r\n            .then((snap) =>\r\n            {\r\n\r\n                if (snap.size > 0) {\r\n\r\n                    snap.forEach((doc) =>\r\n                    {\r\n                    \r\n                        let datacultivo = doc.data();\r\n                        //concatenaci√≥n con maps //AQUI APRENDIMOS A CONCATENAR EN JS :P\r\n                        //console.log(datacultivo[firebase.auth.currentUser.uid]['agua']['maximo']);\r\n                        firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/agua').on('value', snapShot =>\r\n                        {\r\n                            const valorealtimeagua = (snapShot.val());\r\n                            //------------AGUA--------------\r\n                            //console.log(valorealtime.agua)\r\n                            const maxagua = (datacultivo[firebase.auth.currentUser.uid]['agua']['maximo']);\r\n                            const minagua = (datacultivo[firebase.auth.currentUser.uid]['agua']['minimo']);\r\n\r\n                            if ((valorealtimeagua) >= (maxagua)) {\r\n                                setagua(\r\n                                    'Exceso de agua, tomar precacione.'\r\n                                )\r\n                            } else if ((valorealtimeagua) <= (minagua)) {\r\n                                setagua(\r\n                                    'Cantidad de agua menor al minimo.'\r\n                                )\r\n                            } else {\r\n                                setagua(\r\n                                    \r\n                                    'Conciones de agua ideales.'\r\n                                )\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        );\r\n}\r\nconst getaluz= async() =>\r\n{\r\n    await firebase.database.collection('cultivos')\r\n        .where(`${firebase.auth.currentUser.uid}.user`, '==', `${firebase.auth.currentUser.uid}`)\r\n        .get()\r\n        .then((snap) =>\r\n        {\r\n            if (snap.size > 0) {\r\n\r\n                snap.forEach((doc) =>\r\n                {\r\n                \r\n                    let datacultivo = doc.data();\r\n                    //concatenaci√≥n con maps //AQUI APRENDIMOS A CONCATENAR EN JS :P\r\n                    //console.log(datacultivo[firebase.auth.currentUser.uid]['agua']['maximo']);\r\n                    firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/luz').on('value', snapShot =>\r\n                    {\r\n                        const valorealtimeluz = (snapShot.val());\r\n                        //------------Luz--------------\r\n                        //console.log(valorealtime.luz)\r\n                        const maxluz = (datacultivo[firebase.auth.currentUser.uid]['luz']['maximo']);\r\n                        const minluz = (datacultivo[firebase.auth.currentUser.uid]['luz']['minimo']);\r\n\r\n                    \r\n                        if ((valorealtimeluz) > maxluz) {\r\n                            setluz(\r\n                                'Exceso de luz, precaci√≥n.'\r\n                            )\r\n                        } else if ((valorealtimeluz) <= (minluz)) {\r\n                            setluz(\r\n                                'Cantidad de luz debajo de minimo.'\r\n                            )\r\n                        } else {\r\n                            setluz(\r\n                                'Condiciones de luz ideales.'\r\n                            )\r\n                        }\r\n                    });\r\n                    \r\n                });\r\n            }\r\n        }\r\n    );\r\n}\r\nconst getsuelo= async() =>\r\n{\r\n    await firebase.database.collection('cultivos')\r\n        .where(`${firebase.auth.currentUser.uid}.user`, '==', `${firebase.auth.currentUser.uid}`)\r\n        .get()\r\n        .then((snap) =>\r\n        {\r\n            if (snap.size > 0) {\r\n\r\n                snap.forEach((doc) =>\r\n                {\r\n                \r\n                    let datacultivo = doc.data();\r\n                    //concatenaci√≥n con maps //AQUI APRENDIMOS A CONCATENAR EN JS :P\r\n                    //console.log(datacultivo[firebase.auth.currentUser.uid]['agua']['maximo']);\r\n                    firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/suelo').on('value', snapShot =>\r\n                    {\r\n                        const valorealtimeSU = (snapShot.val());\r\n\r\n                        //------------suelo--------------\r\n                        //console.log(valorealtime.suelo)\r\n                        const maxsuelo = (datacultivo[firebase.auth.currentUser.uid]['suelo']['maximo']);\r\n                        const minsuelo = (datacultivo[firebase.auth.currentUser.uid]['suelo']['minimo']);\r\n\r\n                        if ((valorealtimeSU) >= maxsuelo) {\r\n                            setsuelo(\r\n                                'Exceso de humedad en el suelo.'\r\n                            )\r\n                        } else if ((valorealtimeSU) <= (minsuelo)) {\r\n                            setsuelo(\r\n                                'Falta de humedad en el suelo.'\r\n                            )\r\n                        } else {\r\n                            setsuelo(\r\n                                'Condiciones de humedad del suelo ideales.'\r\n                            )\r\n                        }\r\n                    });\r\n\r\n                    \r\n                });\r\n            }\r\n        }\r\n    );\r\n}\r\nconst gethumedad = async() =>\r\n{\r\n    await firebase.database.collection('cultivos')\r\n        .where(`${firebase.auth.currentUser.uid}.user`, '==', `${firebase.auth.currentUser.uid}`)\r\n        .get()\r\n        .then((snap) =>\r\n        {\r\n            if (snap.size > 0) {\r\n\r\n                snap.forEach((doc) =>\r\n                {\r\n                \r\n                    let datacultivo = doc.data();\r\n                    //concatenaci√≥n con maps //AQUI APRENDIMOS A CONCATENAR EN JS :P\r\n                    //console.log(datacultivo[firebase.auth.currentUser.uid]['agua']['maximo']);\r\n                    firebase.realtime.ref('/sensores/' + firebase.auth.currentUser.uid + '/humedad').on('value', snapShot =>\r\n                    {\r\n                        const valorealtimeHu = (snapShot.val());\r\n                    \r\n                        //------------humedad--------------\r\n                        //console.log(valorealtime.suelo)\r\n                        const maxhumedad = (datacultivo[firebase.auth.currentUser.uid]['humedad']['maximo']);\r\n                        const minhumedad = (datacultivo[firebase.auth.currentUser.uid]['humedad']['minimo']);\r\n                      \r\n                        if ((valorealtimeHu) > maxhumedad) {\r\n                            sethumedad('HUMEDAD EXCCEDIDA.')\r\n                        } else if ((valorealtimeHu) < (minhumedad)) {\r\n                            sethumedad('FALTA HUMEDAD.')\r\n                        } else {\r\n                            sethumedad('HUMEDAD IDEAL.')\r\n                        }\r\n                    });\r\n\r\n                    \r\n                });\r\n            }\r\n        }\r\n    );\r\n}\r\n    useEffect(() =>\r\n    {\r\n        getagua();\r\n        getaluz();\r\n        getsuelo();\r\n        gethumedad();\r\n    },[])\r\n    return (\r\n        <ImageBackground source={image} style={styles.Dasboardimage}>\r\n            <View style={styles.Dasboardcontainer}>\r\n                {/**aqui estan los datos del usuario , se utiliza un headeracount */}\r\n                <HeaderAcount /> \r\n                <View style={{ ...styles.Dasboardfooter,alignItems:'center'}}>\r\n                    \r\n                    <View style={{flex:1,top:10}}>\r\n\r\n                        <View style={{ marginVertical: 10,\r\n                            backgroundColor: \"#564A4A\",\r\n                            borderTopLeftRadius: 40,\r\n                            borderTopRightRadius: 40,\r\n                            borderBottomLeftRadius: 40,\r\n                            borderBottomRightRadius:40,\r\n                            elevation: 5,\r\n                            padding:15}}>\r\n                            <Text  style={{color:\"#FFF\",\r\n                                fontWeight: 'bold',\r\n                                fontSize: 20,\r\n                            }}>\r\n                                \r\n                                <Entypo name=\"water\" size={30} color=\"#FFF\" />{\"   \"}{agua}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ marginVertical: 10,\r\n                            backgroundColor: \"#564A4A\",\r\n                            borderTopLeftRadius: 40,\r\n                            borderTopRightRadius: 40,\r\n                            borderBottomLeftRadius: 40,\r\n                            borderBottomRightRadius:40,\r\n                            elevation: 5,\r\n                            padding:15}}>\r\n                            <Text  style={{color:\"#FFF\",\r\n                                fontWeight: 'bold',\r\n                                fontSize: 20,\r\n                            }}>\r\n                                <Entypo name=\"light-up\" size={30} color=\"#FFF\" />{\"   \"}{luz}</Text>\r\n                        </View>\r\n\r\n                        <View style={{ marginVertical: 10,\r\n                            backgroundColor: \"#564A4A\",\r\n                            borderTopLeftRadius: 40,\r\n                            borderTopRightRadius: 40,\r\n                            borderBottomLeftRadius: 40,\r\n                            borderBottomRightRadius:40,\r\n                            elevation: 5,\r\n                            padding:15}}>\r\n                            <Text style={{color:\"#FFF\",\r\n                                fontWeight: 'bold',\r\n                                fontSize: 20,\r\n                            }}>\r\n                                <Entypo name=\"air\" size={30} color=\"#FFF\" />{\"   \"}{suelo}</Text>\r\n                        </View>\r\n\r\n                        <View style={{\r\n                            marginVertical: 10,\r\n                            backgroundColor: \"#564A4A\",\r\n                            borderTopLeftRadius: 40,\r\n                            borderTopRightRadius: 40,\r\n                            borderBottomLeftRadius: 40,\r\n                            borderBottomRightRadius:40,\r\n                            elevation: 5,\r\n                            padding:15\r\n                        }}>\r\n                            <Text style={{color:\"#FFF\",\r\n                                fontWeight: 'bold',\r\n                                fontSize: 20,\r\n                            }}><FontAwesome5 name=\"water\" size={30} color=\"#FFF\" />{\"   \"}{humedad}</Text>\r\n                            \r\n                        </View>\r\n                        \r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n        </ImageBackground>\r\n        \r\n    );\r\n};\r\n\r\nexport default Notificaciones;"]},"metadata":{},"sourceType":"module"}