{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\noe03\\\\Documents\\\\ReactNative\\\\huertoInteligente\\\\src\\\\Navegaci\\xF3n\\\\Navegacion.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useLayoutEffect } from 'react';\nimport { DrawerActions } from '@react-navigation/core';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport styles from \"./../Styles/styles\";\nimport drawerNavegacion from \"./../Navegaci\\xF3n/drawerNavegacion\";\nimport Dasboard from \"./../screens/Private/Dasboard\";\nimport Cuenta from \"./../screens/Private/Cuenta\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nvar Tab = createBottomTabNavigator();\n\nvar Navigation = function Navigation(props) {\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableNativeFeedback, {\n          onPress: function onPress() {\n            return props.navigation.dispatch(DrawerActions.toggleDrawer());\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }\n        }, React.createElement(SimpleLineIcons, {\n          name: \"menu\",\n          size: 25,\n          color: \"black\",\n          style: {\n            top: 4,\n            paddingVertical: 5,\n            paddingLeft: 10,\n            paddingRight: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }));\n      }\n    });\n  }, []);\n  return React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      activeTintColor: 'green',\n      inactiveTintColor: 'gray',\n      style: _objectSpread(_objectSpread({}, styles.barra), styles.sombra)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Dasboard\",\n    component: Dasboard,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: (styles.tabnav, {\n            backgroundColor: '#F0E3CA',\n            padding: 8,\n            borderRadius: 50\n          }),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: require(\"../image/icons/dasborad.png\"),\n          style: {\n            width: 30,\n            height: 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Cuenta\",\n    component: Cuenta,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(View, {\n          style: styles.tabnav,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"user-circle\",\n          size: 45,\n          color: \"#536162\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"drawerNavegacion\",\n    component: drawerNavegacion,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(View, {\n          style: styles.tabnav,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }\n        }, React.createElement(SimpleLineIcons, {\n          name: \"options\",\n          size: 50,\n          color: \"#536162\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Navigation;","map":{"version":3,"sources":["C:/Users/noe03/Documents/ReactNative/huertoInteligente/src/Navegación/Navegacion.js"],"names":["React","useLayoutEffect","DrawerActions","createBottomTabNavigator","styles","drawerNavegacion","Dasboard","Cuenta","FontAwesome5","SimpleLineIcons","Tab","Navigation","props","navigation","setOptions","headerLeft","dispatch","toggleDrawer","top","paddingVertical","paddingLeft","paddingRight","showLabel","activeTintColor","inactiveTintColor","style","barra","sombra","tabBarIcon","focused","tabnav","backgroundColor","padding","borderRadius","require","width","height"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect } from 'react';\r\nimport { DrawerActions} from '@react-navigation/core';\r\nimport { View,Image,Text, TouchableNativeFeedback } from 'react-native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n//estilo\r\nimport styles from './../Styles/styles';\r\n//Navegación\r\nimport drawerNavegacion from './../Navegación/drawerNavegacion';\r\n//pantallas\r\nimport Dasboard from './../screens/Private/Dasboard';\r\nimport Cuenta from './../screens/Private/Cuenta';\r\n//iconos\r\nimport { FontAwesome5 } from '@expo/vector-icons';\r\nimport { SimpleLineIcons } from '@expo/vector-icons';\r\n\r\n\r\n\r\n\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Navigation = (props) =>\r\n{\r\nuseLayoutEffect(() => {\r\n    \r\n    props.navigation.setOptions({\r\n    headerLeft: () => (\r\n        <TouchableNativeFeedback\r\n            onPress={() => props.navigation.dispatch(\r\n                DrawerActions.toggleDrawer()\r\n            ) }\r\n        >\r\n            <SimpleLineIcons\r\n                name=\"menu\"\r\n                size={25}\r\n                color=\"black\"\r\n                style={{\r\n                    top:4,\r\n                    paddingVertical: 5,\r\n                    paddingLeft: 10,\r\n                    paddingRight:20,\r\n                }}\r\n            />\r\n        </TouchableNativeFeedback>\r\n    ),\r\n    })\r\n}, []);\r\n    \r\n    return (\r\n        \r\n        <Tab.Navigator\r\n            tabBarOptions={{\r\n                showLabel: false,\r\n                activeTintColor: 'green',\r\n                inactiveTintColor: 'gray',\r\n                style: {\r\n                    ...styles.barra,\r\n                    ...styles.sombra\r\n                }\r\n             }}\r\n            >\r\n            \r\n           \r\n            <Tab.Screen name=\"Dasboard\" component={Dasboard}\r\n                options={{\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <View style={styles.tabnav, {\r\n                            backgroundColor: '#F0E3CA',\r\n                            padding: 8,\r\n                            borderRadius: 50\r\n                        }}>\r\n                            <Image\r\n                            source={require(\"../image/icons/dasborad.png\")}\r\n                                style={{\r\n                                    width: 30,\r\n                                    height: 30,\r\n                                }}\r\n                            />\r\n                        </View>\r\n                    ),\r\n                }}\r\n            />\r\n           \r\n            <Tab.Screen name=\"Cuenta\" component={Cuenta}\r\n                options={{\r\n                    tabBarIcon: () => (\r\n                        <View style={styles.tabnav}>\r\n                            <FontAwesome5\r\n                            name=\"user-circle\"\r\n                            size={45}\r\n                            color=\"#536162\" />\r\n                            \r\n                        </View>\r\n                    ),\r\n                }}\r\n            />\r\n            <Tab.Screen name=\"drawerNavegacion\" component={drawerNavegacion}\r\n                options={{\r\n                    tabBarIcon: ({ focused }) => (\r\n                        <View style={styles.tabnav}>\r\n                            <SimpleLineIcons\r\n                                name=\"options\"\r\n                                size={50}\r\n                                color=\"#536162\"/>\r\n                        </View>\r\n                    ),\r\n                }}\r\n            />\r\n                \r\n      </Tab.Navigator>\r\n    );\r\n};\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}