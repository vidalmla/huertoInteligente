{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\noe03\\\\Documents\\\\ReactNative\\\\huertoInteligente\\\\src\\\\screens\\\\Public\\\\Registro.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useLayoutEffect } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Feather } from '@expo/vector-icons';\nimport firebase from \"./../../backend/firebase\";\nimport errores_mx from \"./../../helpers/errores_mx\";\nimport styles from \"./../../Styles/styles\";\nimport { LogBox } from \"react-native-web/dist/index\";\n\nvar Registro = function Registro(props) {\n  useLayoutEffect(function () {\n    props.navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return null;\n      }\n    });\n  });\n\n  var _useState = useState('eye-off'),\n      _useState2 = _slicedToArray(_useState, 2),\n      verPass = _useState2[0],\n      setVerPass = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cargando = _useState4[0],\n      setCargando = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      logitud = _useState6[0],\n      setlonguitud = _useState6[1];\n\n  var _useState7 = useState({\n    email: '',\n    pass: '',\n    nombre: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      formData = _useState8[0],\n      setFormData = _useState8[1];\n\n  var registrarUsuario = function registrarUsuario() {\n    var nuevoUsuario;\n    return _regeneratorRuntime.async(function registrarUsuario$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCargando(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth.createUserWithEmailAndPassword(formData.email, formData.pass));\n\n          case 4:\n            nuevoUsuario = _context.sent;\n            console.log(nuevoUsuario);\n            firebase.database.collection(\"usuarios\").add({\n              authId: nuevoUsuario.user.uid,\n              nombreCompleto: formData.nombre\n            });\n            Alert.alert('usuario resgistrado', 'por favor Validar cuenta e inicia sesiÃ³n', [{\n              text: 'Entendido',\n              onPress: function onPress() {\n                setFormData({\n                  email: '',\n                  pass: '',\n                  nombre: ''\n                });\n                props.navigation.navigate('Login');\n              }\n            }]);\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(nuevoUsuario.user.updateProfile({\n              displayName: formData.nombre,\n              photoURL: 'https://firebasestorage.googleapis.com/v0/b/huertoint.appspot.com/o/Avatar%2Fplanta.png?alt=media&token=486d61e3-32d0-4ce2-97ae-6643541ae250'\n            }));\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(nuevoUsuario.user.sendEmailVerification());\n\n          case 12:\n            firebase.realtime.ref(\"/sensores/\" + nuevoUsuario.user.uid).set({\n              agua: 0,\n              humedad: 0,\n              luz: 0,\n              suelo: 0,\n              temperatura: 0,\n              modulo: \"nulo\"\n            });\n            console.log('llegaste hasta aqui');\n            firebase.realtime.ref('/datos/longitud').once('value').then(function (snapshot) {\n              console.log(snapshot);\n              firebase.realtime.ref('datos').set({\n                \"longitud\": snapshot.val() + 1\n              });\n              console.log('urra');\n              firebase.realtime.ref(\"usuarios\").update(_defineProperty({}, snapshot.val(), nuevoUsuario.user.uid));\n              console.log('urra2');\n            });\n            setCargando(false);\n            _context.next = 23;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](1);\n            setCargando(false);\n            console.log(JSON.stringify(_context.t0));\n            Alert.alert('ERROR', errores_mx(_context.t0.code));\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 18]], Promise);\n  };\n\n  var imagen = {\n    uri: \"http://dtai.uteq.edu.mx/~luivid195/AWI4.0/HuertoInteligente/image/pexels-kate-graur-5425692.jpg\"\n  };\n  LogBox.ignoreLogs(['Setting a timer for a long period of time, i.e. multiple minutes, is a performance and correctness issue on Android as it keeps the timer module awake, and timers can only be called when the app is in the foreground. See https://github.com/facebook/react-native/issues/12981 for more info.']);\n  LogBox.ignoreAllLogs();\n  return React.createElement(View, {\n    style: styles.inicioRe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: imagen,\n    style: styles.imagenRE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.tarjetaregistro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textcRE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Registro\")), React.createElement(View, {\n    style: styles.contReg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    keyboardType: \"default\",\n    maxLength: 120,\n    autoCapitalize: \"words\",\n    autoCorrect: true,\n    style: {\n      marginHorizontal: 20,\n      marginVertical: 10,\n      top: 50,\n      width: '90%',\n      borderRadius: 7,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      borderColor: 'green',\n      borderWidth: 2,\n      fontSize: 16\n    },\n    placeholder: \"Nombre completo\",\n    editable: !cargando,\n    value: formData.nombre,\n    onChangeText: function onChangeText(val) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, 'nombre', val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    keyboardType: \"email-address\",\n    maxLength: 70,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    style: {\n      marginHorizontal: 20,\n      marginVertical: 10,\n      top: 50,\n      width: '90%',\n      borderRadius: 7,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      borderColor: 'green',\n      borderWidth: 2,\n      fontSize: 16\n    },\n    placeholder: \"Correo electr\\xF3nico\",\n    editable: !cargando,\n    value: formData.email,\n    onChangeText: function onChangeText(val) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, 'email', val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      width: '100%',\n      position: 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, React.createElement(Feather, {\n    name: verPass,\n    color: \"tomato\",\n    size: 20,\n    style: {\n      position: 'absolute',\n      top: 70,\n      right: 28,\n      zIndex: 1001\n    },\n    onPress: function onPress() {\n      return setVerPass(verPass === 'eye' ? 'eye-off' : 'eye');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: verPass === 'eye' ? false : true,\n    keyboardType: \"number-pad\",\n    maxLength: 8,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    style: {\n      marginHorizontal: 20,\n      marginVertical: 10,\n      top: 50,\n      width: '90%',\n      borderRadius: 7,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      borderColor: 'green',\n      borderWidth: 2,\n      fontSize: 16\n    },\n    placeholder: \"Pin (de 8 a 6 d\\xEDgitos)\",\n    editable: !cargando,\n    value: formData.pass,\n    onChangeText: function onChangeText(val) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, 'pass', val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      display: cargando ? 'none' : 'flex',\n      top: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Registrarme\",\n    color: \"tomato\",\n    onPress: registrarUsuario,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      display: cargando ? 'flex' : 'none',\n      top: 55\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"tomato\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }))))));\n};\n\nexport default Registro;","map":{"version":3,"sources":["C:/Users/noe03/Documents/ReactNative/huertoInteligente/src/screens/Public/Registro.js"],"names":["React","useState","useLayoutEffect","Feather","firebase","errores_mx","styles","LogBox","Registro","props","navigation","setOptions","headerLeft","verPass","setVerPass","cargando","setCargando","logitud","setlonguitud","email","pass","nombre","formData","setFormData","registrarUsuario","auth","createUserWithEmailAndPassword","nuevoUsuario","console","log","database","collection","add","authId","user","uid","nombreCompleto","Alert","alert","text","onPress","navigate","updateProfile","displayName","photoURL","sendEmailVerification","realtime","ref","set","agua","humedad","luz","suelo","temperatura","modulo","once","then","snapshot","val","update","JSON","stringify","code","imagen","uri","ignoreLogs","ignoreAllLogs","inicioRe","imagenRE","tarjetaregistro","textcRE","contReg","marginHorizontal","marginVertical","top","width","borderRadius","paddingVertical","paddingHorizontal","borderColor","borderWidth","fontSize","flex","alignItems","position","right","zIndex","display"],"mappings":"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","sourcesContent":["import React, { useState,useLayoutEffect } from 'react';\r\n\r\nimport {\r\n\tActivityIndicator,\r\n\tAlert,\r\n\tButton,\r\n\tImageBackground,\r\n    TextInput,\r\n    Text,\r\n\tView,\r\n} from 'react-native';\r\n//icono del ojo\r\nimport { Feather } from '@expo/vector-icons';\r\n//backend\r\nimport firebase from './../../backend/firebase';\r\n//ayudas de mensajes de errores\r\nimport errores_mx from './../../helpers/errores_mx'\r\n//estulos\r\nimport styles from './../../Styles/styles';\r\n\r\n//para ignorar el tiempo\r\nimport { LogBox } from 'react-native';\r\n\r\n\r\n\r\nconst Registro = (props) =>\r\n{\r\n    useLayoutEffect(() => {\r\n        \r\n        props.navigation.setOptions({\r\n            headerLeft: () => null,\r\n        })\r\n    });\r\n    \r\n\tconst [verPass, setVerPass] = useState('eye-off');\r\n\tconst [cargando, setCargando] = useState(false);\r\n    const [logitud, setlonguitud] = useState('');\r\n\tconst [formData, setFormData] = useState({\r\n\t\temail: '',\r\n\t\tpass: '',\r\n\t\tnombre: '',\r\n\t});\r\n\t\r\n\r\n\tconst registrarUsuario = async () => {\r\n\t\tsetCargando(true);\r\n\t\ttry {\r\n\t\t\tconst nuevoUsuario =\r\n\t\t\t\tawait firebase.auth.createUserWithEmailAndPassword(\r\n\t\t\t\t\tformData.email,\r\n\t\t\t\t\tformData.pass\r\n\t\t\t\t);\r\n            console.log(nuevoUsuario);\r\n            firebase.database\r\n                .collection(\"usuarios\")\r\n                .add({\r\n                    authId: nuevoUsuario.user.uid,\r\n                    nombreCompleto: formData.nombre,\r\n                });\r\n            \r\n            Alert.alert(\r\n                'usuario resgistrado',\r\n                'por favor Validar cuenta e inicia sesiÃ³n',\r\n                [\r\n                    {\r\n                        text: 'Entendido',\r\n                        onPress: () =>\r\n                        //antes del props seteamos la parte del tex input y jala  solo observa \r\n                        //la linea 67 a la 76\r\n                        {\r\n                            setFormData({\r\n                                email: '',\r\n                                pass: '',\r\n                                nombre: '',\r\n                            });\r\n                            props.navigation.navigate('Login')\r\n                        },\r\n                    },\r\n                ]\r\n            );\r\n            //se aggra la foto por defecto al usuario\r\n            await nuevoUsuario.user.updateProfile({\r\n                displayName: formData.nombre,\r\n                photoURL: 'https://firebasestorage.googleapis.com/v0/b/huertoint.appspot.com/o/Avatar%2Fplanta.png?alt=media&token=486d61e3-32d0-4ce2-97ae-6643541ae250'\r\n            })\r\n\r\n            await nuevoUsuario.user.sendEmailVerification();\r\n            \r\n            //registro en el realtime\r\n            firebase.realtime.ref(`/sensores/${nuevoUsuario.user.uid}`).\r\n            set({\r\n                agua: 0,\r\n                humedad: 0,\r\n                luz: 0,\r\n                suelo: 0,\r\n                temperatura: 0,\r\n                modulo: \"nulo\"\r\n            });\r\n            console.log('llegaste hasta aqui');\r\n\r\n            firebase.realtime.ref('/datos/longitud')\r\n                .once('value').\r\n                then((snapshot) =>\r\n                {\r\n                    console.log(snapshot);\r\n                    firebase.realtime.ref('datos')\r\n                    .set({\r\n                        \"longitud\" : snapshot.val() + 1\r\n                    });\r\n                    console.log('urra');\r\n                    firebase.realtime.ref(\"usuarios\").update({\r\n                        [snapshot.val()]: nuevoUsuario.user.uid\r\n                    });\r\n                    console.log('urra2');\r\n\r\n                });\r\n            //registro en el realtime\r\n            setCargando(false);\r\n\t\t} catch (e) {\r\n\t\t\tsetCargando(false);\r\n            console.log(JSON.stringify(e));\r\n            Alert.alert('ERROR', errores_mx(e.code));\r\n            \r\n        }\r\n\r\n\t};\r\n    const imagen = {\r\n        uri: \"http://dtai.uteq.edu.mx/~luivid195/AWI4.0/HuertoInteligente/image/pexels-kate-graur-5425692.jpg\",\r\n    };\r\n    //para ignorar el tiempo\r\n    LogBox.ignoreLogs(['Setting a timer for a long period of time, i.e. multiple minutes, is a performance and correctness issue on Android as it keeps the timer module awake, and timers can only be called when the app is in the foreground. See https://github.com/facebook/react-native/issues/12981 for more info.']); // Ignore log notification by message\r\n    LogBox.ignoreAllLogs();//Ignore all log notifications\r\n    \r\n    \r\n    \r\n\r\n\r\n\r\n\treturn (\r\n        \r\n        <View style={styles.inicioRe}>\r\n            \r\n            <ImageBackground source={imagen} style={styles.imagenRE}>\r\n            \r\n            <View style={styles.tarjetaregistro}>\r\n            <Text style={styles.textcRE}>Registro</Text>\r\n            </View>\r\n            <View style={styles.contReg}>\r\n                    \r\n                <TextInput\r\n                    keyboardType='default'\r\n                    maxLength={120}\r\n                    autoCapitalize='words'\r\n                    autoCorrect={true}\r\n                    style={{\r\n                        marginHorizontal: 20,\r\n                        marginVertical:10,\r\n                        top:50,\r\n                        width: '90%',\r\n                        borderRadius: 7,\r\n                        paddingVertical: 5,\r\n                        paddingHorizontal: 10,\r\n                        borderColor: 'green',\r\n                        borderWidth: 2,\r\n                        fontSize: 16,\r\n                    }}\r\n                    placeholder='Nombre completo'\r\n                    editable={!cargando}\r\n                    value={formData.nombre}\r\n                    onChangeText={(val) =>\r\n                        setFormData({\r\n                            ...formData,\r\n                            ['nombre']: val,\r\n                        })\r\n                    }\r\n                />\r\n\r\n                <TextInput\r\n                    keyboardType='email-address'\r\n                    maxLength={70}\r\n                    autoCapitalize='none'\r\n                    autoCorrect={false}\r\n                    style={{\r\n                        marginHorizontal: 20,\r\n                        marginVertical:10,\r\n                        top:50,\r\n                        width: '90%',\r\n                        borderRadius: 7,\r\n                        paddingVertical: 5,\r\n                        paddingHorizontal: 10,\r\n                        borderColor: 'green',\r\n                        borderWidth: 2,\r\n                        fontSize: 16,\r\n                    }}\r\n                    placeholder='Correo electrÃ³nico'\r\n                    editable={!cargando}\r\n                    value={formData.email}\r\n                        \r\n                    onChangeText={(val) =>\r\n                        setFormData({\r\n                            ...formData,\r\n                            ['email']: val,\r\n                        })\r\n                    }\r\n                />    \r\n                <View\r\n                style={{\r\n                    flex: 1,\r\n                    alignItems: 'center',\r\n                    width: '100%', position: 'relative',\r\n                }}>\r\n                    <Feather\r\n                        name={verPass}\r\n                        color='tomato'\r\n                        size={20}\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: 70,\r\n                            right: 28,\r\n                            zIndex: 1001,\r\n                        }}\r\n                        onPress={() =>\r\n                            setVerPass(\r\n                                verPass === 'eye'\r\n                                ? 'eye-off'\r\n                                : 'eye'\r\n                            )\r\n                        }\r\n                    />\r\n                    <TextInput\r\n                        secureTextEntry={\r\n                            verPass === 'eye' ? false : true\r\n                        }\r\n                        keyboardType='number-pad'\r\n                        maxLength={8}\r\n                        autoCapitalize='none'\r\n                        autoCorrect={false}\r\n                        style={{\r\n                            marginHorizontal: 20,\r\n                            marginVertical:10,\r\n                            top:50,\r\n                            width: '90%',\r\n                            borderRadius: 7,\r\n                            paddingVertical: 5,\r\n                            paddingHorizontal: 10,\r\n                            borderColor: 'green',\r\n                            borderWidth: 2,\r\n                            fontSize: 16,\r\n                        }}\r\n                        placeholder='Pin (de 8 a 6 dÃ­gitos)'\r\n                        editable={!cargando}\r\n                        value={formData.pass}\r\n                        onChangeText={(val) =>\r\n                            setFormData({\r\n                                ...formData,\r\n                                ['pass']: val,\r\n                            })\r\n                        }\r\n                    />\r\n\r\n                    <View\r\n                    style={{\r\n                        display: cargando ? 'none' : 'flex',\r\n                        top:50,\r\n                    }}>\r\n                        <Button\r\n                        title='Registrarme'\r\n                        color='tomato'\r\n                        onPress={registrarUsuario}\r\n                        />  \r\n                        \r\n                            \r\n                    </View>\r\n                    <View style={{ display: cargando ? 'flex' : 'none', top:55, }}>\r\n                        <ActivityIndicator\r\n                            size='large'\r\n                            color='tomato'\r\n                        />\r\n                    </View>\r\n                </View>  \r\n            </View>\r\n            </ImageBackground>\r\n            \r\n        </View>\r\n\t);\r\n};\r\n\r\nexport default Registro;"]},"metadata":{},"sourceType":"module"}