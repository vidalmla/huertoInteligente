{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\noe03\\\\Documents\\\\ReactNative\\\\huertoInteligente\\\\src\\\\screens\\\\Private\\\\Cuenta.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from \"./../../backend/firebase\";\nimport { Feather } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\n\nvar Cuenta = function Cuenta() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      cargando = _useState2[0],\n      setCargando = _useState2[1];\n\n  var _useState3 = useState({\n    email: firebase.auth.currentUser.email,\n    nombre: firebase.auth.currentUser.displayName,\n    avatar: firebase.auth.currentUser.photoURL,\n    avatarNuevo: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  var getimagenGaleria = function getimagenGaleria() {\n    var _await$ImagePicker$re, status, imgGaleri, _objectSpread2;\n\n    return _regeneratorRuntime.async(function getimagenGaleria$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            status = _await$ImagePicker$re.status;\n\n            if (!(status === 'granted')) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 7:\n            imgGaleri = _context.sent;\n            console.log(imgGaleri);\n\n            if (!imgGaleri.cancelled) {\n              setFormData(_objectSpread(_objectSpread({}, formData), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, 'avatarNuevo', true), _defineProperty(_objectSpread2, 'avatar', imgGaleri.uri), _objectSpread2)));\n            }\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getImagenCamara = function getImagenCamara() {\n    var permisoCamara, permisoGaleria, imgCamara, _objectSpread3;\n\n    return _regeneratorRuntime.async(function getImagenCamara$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            permisoCamara = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 5:\n            permisoGaleria = _context2.sent;\n            console.log(permisoCamara);\n            console.log(permisoGaleria);\n\n            if (!(permisoCamara.status === 'granted' && permisoGaleria.status === 'granted')) {\n              _context2.next = 13;\n              break;\n            }\n\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 4],\n              quality: 1\n            }));\n\n          case 11:\n            imgCamara = _context2.sent;\n\n            if (!imgCamara.cancelled) {\n              setFormData(_objectSpread(_objectSpread({}, formData), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, 'avatarNuevo', true), _defineProperty(_objectSpread3, 'avatar', imgCamara.uri), _objectSpread3)));\n            }\n\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginVertical: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Perfil de la Cuenta\")), React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      paddingHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(ImageBackground, {\n    style: {\n      width: 200,\n      height: 200,\n      backgroundColor: \"#753422\",\n      borderRadius: 100,\n      overflow: 'hidden'\n    },\n    source: {\n      uri: formData.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      padding: 5,\n      borderWidth: 2,\n      borderColor: \"#000\",\n      width: '100%',\n      borderRadius: 8,\n      backgroundColor: '#000',\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      alignItems: 'center',\n      paddingBottom: 10\n    },\n    onPress: function onPress() {\n      return Alert.alert('Actializar Avatar', 'Â¿Como quieres Actualizar?', [{\n        text: 'Cancelar',\n        style: 'destructive'\n      }, {\n        text: 'Desde Galeria',\n        onPress: getimagenGaleria\n      }, {\n        text: 'Desde la camara',\n        onPress: getImagenCamara\n      }]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#fff'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, React.createElement(Feather, {\n    name: \"edit\",\n    size: 24,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }), \"Editar\"))), React.createElement(TextInput, {\n    keyboardType: \"default\",\n    maxLength: 70,\n    autoCapitalize: \"words\",\n    autoCorrect: false,\n    style: {\n      marginHorizontal: 20,\n      marginVertical: 10,\n      top: 50,\n      width: '100%',\n      borderRadius: 7,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      borderColor: 'green',\n      borderWidth: 2,\n      fontSize: 16\n    },\n    placeholder: \"Nombre completo\",\n    editable: !cargando,\n    value: formData.nombre,\n    onChangeText: function onChangeText(val) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, 'nombre', val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    keyboardType: \"email-address\",\n    maxLength: 70,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    style: {\n      marginHorizontal: 20,\n      marginVertical: 10,\n      top: 50,\n      width: '100%',\n      borderRadius: 7,\n      paddingVertical: 5,\n      paddingHorizontal: 10,\n      borderColor: 'green',\n      borderWidth: 2,\n      fontSize: 16\n    },\n    placeholder: \"Correo electr\\xF3nico\",\n    editable: false,\n    value: formData.email,\n    onChangeText: function onChangeText(val) {\n      return setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, 'email', val)));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      bottom: -100,\n      display: cargando ? 'none' : 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Guardar cambios\",\n    onPress: function _callee() {\n      var blob, file, subidaArchivo;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setCargando(true);\n\n              if (!formData.avatarNuevo) {\n                _context3.next = 43;\n                break;\n              }\n\n              _context3.t0 = _regeneratorRuntime;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(fetch(formData.avatar));\n\n            case 5:\n              _context3.t1 = _context3.sent.blob();\n              _context3.next = 8;\n              return _context3.t0.awrap.call(_context3.t0, _context3.t1);\n\n            case 8:\n              blob = _context3.sent;\n              file = new File([blob], firebase.auth.currentUser.uid + \".jpg\", {\n                type: 'image/jpeg'\n              });\n              blob.close();\n              _context3.next = 13;\n              return _regeneratorRuntime.awrap(firebase.storage.ref().child('Avatar').child(file.name).put(file, file.type));\n\n            case 13:\n              subidaArchivo = _context3.sent;\n\n              if (!(subidaArchivo.state === 'success')) {\n                _context3.next = 41;\n                break;\n              }\n\n              _context3.t2 = setFormData;\n              _context3.t3 = _objectSpread;\n              _context3.t4 = _objectSpread({}, formData);\n              _context3.t5 = {};\n              _context3.t6 = _defineProperty;\n              _context3.t7 = {};\n              _context3.next = 23;\n              return _regeneratorRuntime.awrap(subidaArchivo.ref.getDownloadURL());\n\n            case 23:\n              _context3.t8 = _context3.sent;\n              _context3.t9 = (0, _context3.t6)(_context3.t7, 'avatar', _context3.t8);\n              _context3.t10 = (0, _context3.t3)(_context3.t4, _context3.t5, _context3.t9);\n              (0, _context3.t2)(_context3.t10);\n              _context3.t11 = _regeneratorRuntime;\n              _context3.t12 = firebase.auth.currentUser;\n              _context3.t13 = formData.nombre;\n              _context3.next = 32;\n              return _regeneratorRuntime.awrap(subidaArchivo.ref.getDownloadURL());\n\n            case 32:\n              _context3.t14 = _context3.sent;\n              _context3.t15 = {\n                displayName: _context3.t13,\n                photoURL: _context3.t14\n              };\n              _context3.t16 = _context3.t12.updateProfile.call(_context3.t12, _context3.t15);\n              _context3.next = 37;\n              return _context3.t11.awrap.call(_context3.t11, _context3.t16);\n\n            case 37:\n              setCargando(false);\n              setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, 'avatarNuevo', false)));\n              console.log(photoURL);\n              Alert.alert('Datos Actualizados');\n\n            case 41:\n              _context3.next = 47;\n              break;\n\n            case 43:\n              _context3.next = 45;\n              return _regeneratorRuntime.awrap(firebase.auth.currentUser.updateProfile({\n                displayName: formData.nombre\n              }));\n\n            case 45:\n              setCargando(false);\n              Alert.alert('Datos Actualizados');\n\n            case 47:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      display: cargando ? 'flex' : 'none',\n      top: 55\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"tomato\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Cuenta;","map":{"version":3,"sources":["C:/Users/noe03/Documents/ReactNative/huertoInteligente/src/screens/Private/Cuenta.js"],"names":["React","useState","firebase","Feather","ImagePicker","Cuenta","cargando","setCargando","email","auth","currentUser","nombre","displayName","avatar","photoURL","avatarNuevo","formData","setFormData","getimagenGaleria","requestMediaLibraryPermissionsAsync","status","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","imgGaleri","console","log","cancelled","uri","getImagenCamara","requestCameraPermissionsAsync","permisoCamara","permisoGaleria","launchCameraAsync","imgCamara","flex","alignItems","justifyContent","marginVertical","paddingHorizontal","width","height","backgroundColor","borderRadius","overflow","padding","borderWidth","borderColor","position","bottom","left","paddingBottom","Alert","alert","text","style","onPress","color","marginHorizontal","top","paddingVertical","fontSize","val","display","fetch","blob","file","File","uid","type","close","storage","ref","child","name","put","subidaArchivo","state","getDownloadURL","updateProfile"],"mappings":"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","sourcesContent":["import React, { useState}from 'react';\r\nimport\r\n    {\r\n        View,\r\n        Text,\r\n        ImageBackground,\r\n        TouchableOpacity,\r\n        Alert,\r\n        TextInput,\r\n        Button,\r\n        ActivityIndicator\r\n    } from 'react-native';\r\n//\r\nimport firebase from './../../backend/firebase';\r\n\r\nimport { Feather } from '@expo/vector-icons';\r\n//permisos de la app\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\n\r\nconst Cuenta = () =>\r\n{\r\n    //estates para la carga de los datos del usuario\r\n    const [cargando, setCargando] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: firebase.auth.currentUser.email,\r\n        nombre: firebase.auth.currentUser.displayName,\r\n        avatar: firebase.auth.currentUser.photoURL,\r\n        avatarNuevo: false,\r\n    })\r\n//funcion para la galeria\r\n    const getimagenGaleria = async () =>\r\n    {\r\n        //solicitamos el permiso para ingresar a la galeria\r\n\r\n        const { status } =\r\n            await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        \r\n        //verificar los permisos del user\r\n\r\n        if (status === 'granted') {\r\n\r\n            //se toma la imagen de la galeri\r\n            const imgGaleri = await ImagePicker.launchImageLibraryAsync({\r\n                //el tipo de la galeria que se puede tomar ya sea imagnes o solo videos\r\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n                //opciÃ³n si se puede editar la imagen\r\n                allowsEditing: true,\r\n                /**\r\n                 * las opciones de diseÃ±o de las imagines\r\n                 * 1:1\r\n                 * 4:3Â¶\r\n                 * 16:9\r\n                 * 2.35:1\r\n                 */\r\n                aspect: [1, 1],\r\n                quality: 1,\r\n            });\r\n            console.log(imgGaleri);\r\n\r\n            if (!imgGaleri.cancelled) {\r\n                setFormData({\r\n                    ...formData,\r\n                    ['avatarNuevo']: true,\r\n                    ['avatar']: imgGaleri.uri,\r\n                });\r\n            }\r\n        }\r\n    };\r\n    const getImagenCamara = async () => {\r\n\r\n\t\tconst permisoCamara =\r\n\t\t\tawait ImagePicker.requestCameraPermissionsAsync();\r\n\t\tconst permisoGaleria =\r\n\t\t\tawait ImagePicker.requestMediaLibraryPermissionsAsync();\r\n\r\n\t\t/**\r\n\t\t * Si tenemos ambos permisos\r\n\t\t */\r\n\t\tconsole.log(permisoCamara);\r\n\t\tconsole.log(permisoGaleria);\r\n\t\tif (\r\n\t\t\tpermisoCamara.status === 'granted' &&\r\n\t\t\tpermisoGaleria.status === 'granted'\r\n\t\t) {\r\n\t\t\t/*\r\n            Tomamos la imgen desde la cÃ¡mara utilizando\r\n            los mismo parÃ¡metros que la galerÃ­a */\r\n\t\t\tconst imgCamara =\r\n\t\t\t\tawait ImagePicker.launchCameraAsync({\r\n\t\t\t\t\tmediaTypes:\r\n\t\t\t\t\t\tImagePicker.MediaTypeOptions.Images,\r\n\t\t\t\t\tallowsEditing: true,\r\n\t\t\t\t\taspect: [4, 4],\r\n\t\t\t\t\tquality: 1,\r\n\t\t\t\t});\r\n\r\n\t\t\t/*\r\n            Si se lecciono una foto\r\n            */\r\n\t\t\tif (!imgCamara.cancelled) {\r\n\t\t\t\tsetFormData({\r\n                    ...formData,\r\n                    ['avatarNuevo']: true,\r\n\t\t\t\t\t['avatar']: imgCamara.uri,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1, }}>\r\n            <View style={{\r\n           alignItems: \"center\",\r\n           justifyContent: \"center\",\r\n           marginVertical:20\r\n           }}>\r\n                <Text>\r\n                    Perfil de la Cuenta\r\n                </Text>\r\n            </View>\r\n            <View\r\n            style={{\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            paddingHorizontal:10\r\n            }}>\r\n                <ImageBackground\r\n                style={{\r\n                    width: 200,\r\n                    height: 200,\r\n                    backgroundColor: \"#753422\",\r\n                    borderRadius: 100,\r\n                    overflow:'hidden'\r\n                    \r\n                    \r\n                }}\r\n                source ={{uri: formData.avatar}}\r\n                >\r\n                <TouchableOpacity style={{\r\n                    padding: 5,\r\n                    borderWidth: 2,\r\n                    borderColor: \"#000\",\r\n                    width: '100%',\r\n                    borderRadius: 8,\r\n                    backgroundColor: '#000',\r\n                    position: 'absolute',\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    alignItems: 'center',\r\n                    paddingBottom: 10,\r\n                }}\r\n                onPress=\r\n                {() => Alert.alert\r\n                (\r\n                    'Actializar Avatar',\r\n                    'Â¿Como quieres Actualizar?',\r\n                    [\r\n                        {\r\n                            text: 'Cancelar',\r\n                            style: 'destructive'\r\n                        },\r\n                        {\r\n                            text: 'Desde Galeria',\r\n                            onPress: getimagenGaleria\r\n                        },\r\n                        {\r\n                            text: 'Desde la camara',\r\n                            onPress: getImagenCamara\r\n                        },\r\n                    \r\n                    ]\r\n                )}>\r\n                    \r\n                <Text style={{color:'#fff'}}>\r\n                    <Feather\r\n                        name=\"edit\"\r\n                        size={24}\r\n                        color=\"white\"\r\n                    />\r\n                    Editar\r\n                </Text>\r\n                </TouchableOpacity>\r\n                </ImageBackground>\r\n                <TextInput\r\n                    keyboardType='default'\r\n                    maxLength={70}\r\n                    autoCapitalize='words'\r\n                    autoCorrect={false}\r\n                    style={{\r\n                        marginHorizontal: 20,\r\n                        marginVertical:10,\r\n                        top:50,\r\n                        width: '100%',\r\n                        borderRadius: 7,\r\n                        paddingVertical: 5,\r\n                        paddingHorizontal: 10,\r\n                        borderColor: 'green',\r\n                        borderWidth: 2,\r\n                        fontSize: 16,\r\n                    }}\r\n                    placeholder='Nombre completo'\r\n                    editable={!cargando}\r\n                    value={formData.nombre}\r\n                    onChangeText={(val) =>\r\n                        setFormData({\r\n                            ...formData,\r\n                            ['nombre']: val,\r\n                        })\r\n                    }\r\n                />    \r\n                <TextInput\r\n                    keyboardType='email-address'\r\n                    maxLength={70}\r\n                    autoCapitalize='none'\r\n                    autoCorrect={false}\r\n                    style={{\r\n                        marginHorizontal: 20,\r\n                        marginVertical:10,\r\n                        top:50,\r\n                        width: '100%',\r\n                        borderRadius: 7,\r\n                        paddingVertical: 5,\r\n                        paddingHorizontal: 10,\r\n                        borderColor: 'green',\r\n                        borderWidth: 2,\r\n                        fontSize: 16,\r\n                    }}\r\n                    placeholder='Correo electrÃ³nico'\r\n                    editable={false}\r\n                    value={formData.email}\r\n                    onChangeText={(val) =>\r\n                        \r\n                        setFormData({\r\n                            ...formData,\r\n                            ['email']: val,\r\n                        })\r\n                    }\r\n                />\r\n\r\n                <View style={{\r\n                    position: 'absolute',\r\n                    bottom: -100,\r\n                    display: cargando ? 'none' : 'flex',\r\n                    \r\n                }}>\r\n                        \r\n                    <Button\r\n                        title='Guardar cambios'\r\n                        onPress={async() =>\r\n                        {\r\n                            setCargando(true);\r\n                            // Forma de subir archivos a storage\r\n                            if (formData.avatarNuevo) {\r\n                               /**\r\n                                * Notas\r\n                                * paso 1 .- subiremos los datos al internet \r\n                                *   1,1- verificar que tenermos storas en back\r\n                                * \r\n                                * ahora si vamos a los pasos\r\n                                * \r\n                                * generamos la cadena binaria del archivo llamado blob\r\n                                */\r\n                                const blob = await (await fetch(formData.avatar)).blob();\r\n                                //se toma la url debido a que avatar trae el uri\r\n\r\n                                /**\r\n                                 * ahora vamos a generar un file para firestore\r\n                                 * \r\n                                 * usamos 3 parametros\r\n                                 * 1.- contenido binario \r\n                                 * 2.- nombre del archivo\r\n                                 * 3.- config (tipo del archivo Mime)\r\n                                 */\r\n                                //      [contenido binario],       [_NOMNBRE_ARCHIVO_.JPG],          [configuracion del archivo]\r\n                                const file = new File([blob], `${firebase.auth.currentUser.uid}.jpg`,{type: 'image/jpeg'})\r\n                                //verificamos que el archivo ya no se siga escribiendo \r\n                                blob.close();\r\n\r\n                                /**\r\n                                 * una vez creado el archivo lo subimos a firestore en storage\r\n                                 * \r\n                                 * se ocupa conocer exactamente donde esta la ubicaciÃ³n de nuestra carpeta de nuestro servicio\r\n                                 * \r\n                                 * ref()-------> home de mi servicio\r\n                                 * child()----> referencia a un componente hijo\r\n                                 * put() -----> crea un recurso en el servicio a partir de un blob\r\n                                 */\r\n\r\n                                const subidaArchivo =\r\n                                    await firebase.storage\r\n                                        .ref()\r\n                                        .child('Avatar')\r\n                                        .child(file.name)\r\n                                        .put(file, file.type);\r\n                                /**\r\n                                 * si la subida es exitosa entonces se busca a \r\n                                 */\r\n\r\n                                if (subidaArchivo.state === 'success') {\r\n                                    /**\r\n                                     * solicitamos la nueva url del user \r\n                                     */\r\n\r\n                                    setFormData({\r\n                                        ...formData, ['avatar']:\r\n                                            await subidaArchivo.ref.getDownloadURL()\r\n                                    });\r\n\r\n                                    //actualizamos los datos del usuario\r\n                                    //poner un await en la linea 316\r\n                                    await firebase.auth.currentUser.updateProfile({\r\n                                        displayName:\r\n                                            formData.nombre,\r\n                                        photoURL:\r\n                                            await subidaArchivo.ref.getDownloadURL()\r\n                                        \r\n                                    })\r\n\r\n                                    setCargando(false);\r\n                                    setFormData({ ...formData, ['avatarNuevo']: false });\r\n                                    console.log(photoURL);\r\n                                    Alert.alert('Datos Actualizados');\r\n                                }\r\n                            }else {\r\n                            //actualizo el nombre\r\n                            await firebase.auth.currentUser.updateProfile({\r\n                                displayName: formData.nombre\r\n                            });\r\n                                \r\n                                setCargando(false);\r\n                                Alert.alert('Datos Actualizados');\r\n                            }\r\n\r\n                        }}                    \r\n                    />\r\n                </View>\r\n                <View style={{ display: cargando ? 'flex' : 'none', top:55, }}>\r\n                    <ActivityIndicator\r\n                        size='large'\r\n                        color='tomato'\r\n                    />\r\n                </View>\r\n            </View>  \r\n        </View>\r\n    );\r\n    \r\n}\r\nexport default Cuenta;"]},"metadata":{},"sourceType":"module"}